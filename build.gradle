// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        jcenter()
    }
    ext.versions = [
            build_tools: '30.0.2',
            compiled_sdk: 29,
            min_sdk: 21,
            target_sdk: 29,
            app_version_code: 1,
            app_version_name: '0.01',
            appcompat: '1.2.0',
            constraintlayout: '2.0.1',
            junit5: '5.7.0-RC1',
            junit5_runner: '1.7.0-RC1',
            androidx_junit: '1.1.1',
            espresso: '3.2.0',
            retrofit: '2.9.0',
            okhttp: '4.8.1',
            gson: '2.8.6',
            logging_interceptor: '4.8.1',
            room_db: '2.2.5',
            core_robolectric: '1.3.0',
            mockito: '2.23.0',
            truth: '1.0.1',
            hamcrest: '2.2',
            robolectric: '4.4',
            material: '1.2.1',
            glide: '4.11.0',
            swipe_refresh_layout: '1.1.0'
    ]
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    ext.deps = [
            appcompat: "androidx.appcompat:appcompat:$versions.appcompat",
            constraintlayout: "androidx.constraintlayout:constraintlayout:$versions.constraintlayout",
            junit5_vintage: "org.junit.vintage:junit-vintage-engine:$versions.junit5",
            junit5_params: "org.junit.jupiter:junit-jupiter-params:$versions.junit5",
            junit5_engine: "org.junit.jupiter:junit-jupiter-engine:$versions.junit5",
            junit5_api: "org.junit.jupiter:junit-jupiter-api:$versions.junit5",
            junit5_runner: "org.junit.platform:junit-platform-runner:$versions.junit5_runner" ,
            androidx_junit: "androidx.test.ext:junit:$versions.androidx_junit",
            espresso: "androidx.test.espresso:espresso-core:$versions.espresso",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okhttp",
            logging_interceptor: "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor",
            gson: "com.google.code.gson:gson:$versions.gson",
            retrofit: "com.squareup.retrofit2:retrofit:$versions.retrofit",
            retrofit_gson: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
            room_db: "androidx.room:room-runtime:$versions.room_db" ,
            room_db_compiler: "androidx.room:room-compiler:$versions.room_db" ,
            room_test_helpers: "androidx.room:room-testing:$versions.room_db" ,
            core_robolectric: "androidx.test:core:$versions.core_robolectric" ,
            robolectric: "org.robolectric:robolectric:$versions.robolectric" ,
            mockito: "org.mockito:mockito-android:$versions.mockito" ,
            truth: "com.google.truth:truth:$versions.truth" ,
            hamcrest_lib: "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrest: "org.hamcrest:hamcrest:$versions.hamcrest" ,
            material: "com.google.android.material:material:$versions.material" ,
            glide: "com.github.bumptech.glide:glide:$versions.glide" ,
            glide_compiler : "com.github.bumptech.glide:compiler:$versions.glide" ,
            swipe_refresh_layout: "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"
    ]
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}